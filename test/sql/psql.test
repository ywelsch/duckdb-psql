# name: test/sql/psql.test
# description: test psql extension
# group: [sql]

statement ok
CREATE TABLE t1(i INTEGER, j INTEGER);

# Before we load the extension, this will fail
statement error
from t1 |> order by i
----
Parser Error: syntax error at or near "|>"

# Require statement will ensure this test is run with this extension loaded
require psql

# Confirm the extension works
statement ok
from t1 |> order by i

# Trailing semicolon should work (e.g. used as part of CLI)
statement ok
from t1 |> order by i;

# Bad psql statement
statement error
from t1 |> srt j
----
Parser Error: syntax error at or near "j"

# Only split on | that has whitespace around it
statement ok
from t1 |> select i || ',' || j;

# as statement to provide named access
statement ok
from t1 |> select i || ',' || j as bar |> as foo select foo.bar;

# scoped transforms
statement ok
create table t2 as (| from t1 |> select i || ',' || j as bar |> as foo select foo.bar |);

# multiple scoped transforms
statement ok
with x as (| from t1 |> select i || ',' || j as bar |> as foo |), y as (| from t1 |> select i || ',' || j as bar |> as foo |) from x union from y;

statement ok
INSTALL httpfs;

statement ok
LOAD httpfs;

# full README example
statement ok
from 'https://raw.githubusercontent.com/ywelsch/duckdb-psql/main/example/invoices.csv' |> where invoice_date >= date '1970-01-16' |> select *, 0.8 as transaction_fees, total - transaction_fees as income |> where income > 1 |> select customer_id, avg(total), sum(income) as sum_income, count() as ct group by customer_id |> order by sum_income desc |> limit 10 |> as invoices join 'https://raw.githubusercontent.com/ywelsch/duckdb-psql/main/example/customers.csv' as customers on invoices.customer_id = customers.customer_id |> select customer_id, last_name || ', ' || first_name as name, sum_income, version() as db_version;
